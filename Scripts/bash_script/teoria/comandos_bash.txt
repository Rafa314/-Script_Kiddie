rblue03@fedora:~/Desktop/Study/Desec_Security/Scripts/bash_script$ echo {1..10} 
1 2 3 4 5 6 7 8 9 10

rblue03@fedora:~/Desktop/Study/Desec_Security/Scripts/bash_script$ echo {a..z} 
a b c d e f g h i j k l m n o p q r s t u v w x y z

rblue03@fedora:~/Desktop/Study/Desec_Security/Scripts/bash_script$ seq 1 10
1
2
3
4
5
6
7
8
9
10


for ip in {1..10};do echo 192.168.0.$ip;done
192.168.0.1
192.168.0.2
192.168.0.3
192.168.0.4
192.168.0.5
192.168.0.6
192.168.0.7
192.168.0.8
192.168.0.9
192.168.0.10

bash é um interpretador de comandos e uma linguagem de programação de comandos desenvolvido para 
UNIX-like sistemas operacionais. 

BASH pe o GNU project shell - The Bourne Again SHell. ele incorpora o Korn shell(ksh) e o C shell 
(csh) 

bash --help -> documentação 

~Revisão~

Variáveis e sintaxe do bash

#!/bin/bash -> apontamos para o interpretador bash

echo "echo é o comando que exibe o texto na tela" 
echo "Sistema ligado por:"$(uptime -p) -> conseguimos utilizar comandos bash com $() 
podemos definir e ler variáveis 
echo "Digite o ip" 
read ip #você vai guardar o valor em "ip" 
porta=80 #podemos atribuir valor com o sinal "="
#não coloque espaços em branco, isso pode ferrar o processo de interpretação
echo "Exibimos aqui os valores": $ip na porta: $porta

Modo de criarmos um executável bash: 
criamos um arquivo com a extenção .sh -> executamos o comando chmod +x <arquivo>.sh
ele virára um executável e poderemos executá-lo dessa forma: 
./<arquivo>.sh

Por que precisamos fazer isso? 

Isso se deve deivo as permissões de arquivo serem configurados de forma explícita e granular 
para garantir 1. segurança e 2. controle. 

No Linux/Unic=x, cada arquivo tem três conjuntos de permissões: leitura(r - read), escrita(w - write) e 
execução(x - eXecution)  

Utilizando este comando informamos ao nosso sistema que (modifica as permissões) 
o arquivo pode ser executado diretamente. 

Se você não quiser ou não puder alterar as permissões, também é possível executar o script especificando 
o interpretador diretamente, como: 

bash script.sh 

Como utilizar o que foi ensinado juntamente com comandos bash? 
podemos executar comandos normalmente em um script bash, afinal ela é uma linguagem de comandos. 

#!/bin/bash
echo "Digite o IP"
read ip 
echo "Efetuamos Ping no host:$ip"
ping -c1 <enviamos apenas um pacote para o host> $ip



